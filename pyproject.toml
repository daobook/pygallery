[project]
name = "pygallery"
version = "0.0.1"
description = "收录一些有趣的 Python 库和项目"
authors = [
    {name = "xinetzone", email = "735613050@qq.com"},
]
requires-python = ">=3.12"
readme = "README.md"
license = {file = "LICENSE"}
maintainers = [
  {name = "xinetzone", email = "735613050@qq.com"},
]
dependencies = [
    "xyzstyle",
    "sphinx",
    "taolib",
]

[project.urls]
Repository = "https://github.com/xinetzone/pygallery"
Documentation = "https://taolib.readthedocs.io/"

[project.optional-dependencies]
doc = [
  "manim",
  "fabric",
  "termcolor",
  "sphinx",
  "docutils",
  "sphinxcontrib-bibtex",
  "sphinxext-opengraph",
  "sphinxcontrib-youtube",
  "sphinx-favicon",
  "xyzstyle",
  "ablog",
  "pydata-sphinx-theme>=0.7.2",
  "sphinx-book-theme",
  "feedgen",
  "sphinx_packaging",
  "ipywidgets>=7.0.0",
  "myst-nb",
  "sphinxcontrib-websupport",
  "sphinx-thebe",
  "sphinx-copybutton",
  "sphinx-comments",
  "plotly",
  "pandas",
  "matplotlib",
  "sphinxcontrib-mermaid",
  "sphinx-design",
  "sphinx-automodapi",
  "sphinxext-rediraffe",
  "sphinxcontrib-bibtex",
  # "plotly-geo",
  "sphinx-plotly-directive",
  "dash",
  "html5tagger",
  "python-docx",
  "sphinx-sitemap",
  "sphinx-packaging",
  "bokeh",
  "ipympl",
  "ipykernel",
  "ipyleaflet",
  "jupyter-client",
  "jupyter-packaging",
  "sphinx-jsonschema",
  # 'jupyterlite-sphinx',
  # "jupyterlite-xeus",
  # "xeus-python",
  # "jupyterlite-core[all]",
  # "starlette",
  # "gradio",
  # "gradio-client",
  # "fastapi",
  # "httpx",
  # "jupyterlite-pyodide-kernel",
  # "voici",
  # "jupyterlab",
  # "jupyter_server",
  # "jupyterlab_server",
  "sphinx-autoapi",
  "libarchive-c",
  "sphinxcontrib-katex",
  "ipympl",
  "sphinx-proof",
  # MMLab
  "mmcv",
  "mmengine",
  "terminaltables",
  "pycocotools",
  "shapely",
  "albumentations",
  "numba",
  "timm",
  "sphinx-reredirects",
  "sphinxcontrib-programoutput",
]

dev = [
  "pdm",
  "pygame",
  "gymnasium",
  # "gym-multigrid",
  "PyGithub[integrations]",
  "bytecode",
  "numpy",
  "toml",
  "fsspec",
  "pyarrow",
  "invoke",
  "openpyxl",
  "rich[jupyter]",
  "grpcio",
  "absl-py",
  "ping3",
  "paramiko",
  "prefect",
  "controlflow",
  "tables",
]

gui = [
  "PySide6",
]

flows = [
    "invoke",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true
